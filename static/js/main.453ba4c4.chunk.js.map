{"version":3,"sources":["components/post.component.jsx","components/spinner.component.jsx","App.js","useQuery.hook.js","reportWebVitals.js","index.js"],"names":["Post","React","forwardRef","props","ref","post","useState","liked","setLiked","loved","setLoved","className","id","title","body","onClick","prev","Spinner","App","pageNo","setPageNo","loading","setLoading","limitReached","setLimitReached","error","setError","posts","setPosts","useEffect","axios","method","url","params","_page","_limit","then","result","console","log","data","length","prevData","catch","useQuery","observer","useRef","lastElementRef","useCallback","element","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNo","observe","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAwCeA,EArCFC,IAAMC,YAAW,SAACC,EAAOC,GACpC,IAAMC,EAAOF,EAAME,KADyB,EAElBJ,IAAMK,UAAS,GAFG,mBAErCC,EAFqC,KAE9BC,EAF8B,OAGlBP,IAAMK,UAAS,GAHG,mBAGrCG,EAHqC,KAG9BC,EAH8B,KAK5C,OACE,sBAAKC,UAAU,OAAOP,IAAKA,EAA3B,UACE,qBAAKO,UAAU,aAAf,SAA6BN,EAAKO,GAAK,KAAOP,EAAKQ,QACnD,mBAAGF,UAAU,YAAb,SAA0BN,EAAKS,OAC/B,sBAAKH,UAAU,eAAf,UACE,qBACEA,UAAS,eAAUJ,EAAO,SAAU,IACpCQ,QAAS,WACJN,GACDC,GAAS,SAAAM,GAAI,OAAKA,KAEpBR,GAAS,SAAAQ,GAAI,OAAKA,MANtB,SASE,mBAAGL,UAAS,UAAKJ,EAAO,mBAAqB,wBAE/C,qBACEI,UAAS,eAAUF,EAAO,SAAU,IACpCM,QAAS,WACJR,GACDC,GAAS,SAAAQ,GAAI,OAAKA,KAEpBN,GAAS,SAAAM,GAAI,OAAKA,MANtB,SASE,mBAAGL,UAAS,UAAKF,EAAO,eAAiB,6B,MC9BpC,SAASQ,IACtB,OACE,qBAAKN,UAAU,YC0CJO,MAzCf,WAAgB,IAAD,EACeZ,mBAAS,GADxB,mBACNa,EADM,KACEC,EADF,OCHA,SAAkBD,GAAS,IAAD,EACXb,oBAAS,GADE,mBAClCe,EADkC,KACzBC,EADyB,OAEDhB,oBAAS,GAFR,mBAElCiB,EAFkC,KAEpBC,EAFoB,OAGflB,oBAAS,GAHM,mBAGlCmB,EAHkC,KAG3BC,EAH2B,OAIfpB,mBAAS,IAJM,mBAIlCqB,EAJkC,KAI3BC,EAJ2B,KA6BvC,OAvBAC,qBACE,WACEP,GAAW,GACXQ,IAAM,CACFC,OAAQ,MACRC,IAAK,6CACLC,OAAQ,CAAEC,MAAOf,EAAQgB,OAAQ,QAElCC,MAAK,SAAAC,GACJC,QAAQC,IAAI,CAACF,WACVA,EAAOG,KAAKC,QAAU,GACvBjB,GAAgB,GAElBI,GAAS,SAAAc,GAAQ,4BAAQA,GAAR,YAAqBL,EAAOG,UAC7ClB,GAAW,GACXI,GAAS,MAEViB,OAAM,SAAAlB,GACLC,EAASD,GACTa,QAAQC,IAAI,CAACd,eAEhB,CAACN,IAEC,CAACE,UAASI,QAAOE,QAAOJ,gBDxBiBqB,CAASzB,GAAjDE,EAFK,EAELA,QAASI,EAFJ,EAEIA,MAAOE,EAFX,EAEWA,MAAOJ,EAFlB,EAEkBA,aAEzBsB,EAAWC,mBACXC,EAAiBC,uBACrB,SAACC,GACK5B,IAGAwB,EAASK,SACXL,EAASK,QAAQC,aAEnBN,EAASK,QAAU,IAAIE,sBAAqB,SAACC,GACvCA,EAAQ,GAAGC,iBAAmB/B,GAChCH,GAAU,SAACmC,GAAD,OAAgBA,EAAa,QAGvCN,GACFJ,EAASK,QAAQM,QAAQP,MAG7B,CAAC5B,IAGH,OACE,sBAAKV,UAAU,MAAf,UACGgB,EAAM8B,KAAI,SAACpD,EAAMqD,GAChB,OAAIA,EAAQ,IAAM/B,EAAMc,OACf,cAAC,EAAD,CAAMpC,KAAMA,EAAMD,IAAK2C,GAAqB1C,EAAKO,IAEjD,cAAC,EAAD,CAAMP,KAAMA,GAAWA,EAAKO,OAGtCS,GAAW,cAACJ,EAAD,IACXQ,GAAS,sDACTF,GAAgB,qEE9BRoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.453ba4c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./post.styles.css\";\r\n\r\nconst Post = React.forwardRef((props, ref) => {\r\n  const post = props.post;\r\n  const [liked, setLiked] = React.useState(false);\r\n  const [loved, setLoved] = React.useState(false);\r\n\r\n  return (\r\n    <div className=\"post\" ref={ref}>\r\n      <div className=\"post-title\">{post.id + \". \" + post.title}</div>\r\n      <p className=\"post-body\">{post.body}</p>\r\n      <div className=\"interactions\">\r\n        <div\r\n          className={`like ${liked? \"active\": \"\"}`}\r\n          onClick={() => {\r\n            if(loved) {\r\n              setLoved(prev => !prev);\r\n            }\r\n            setLiked(prev => !prev);\r\n          }}\r\n        >\r\n          <i className={`${liked? \"fas fa-thumbs-up\" : \"far fa-thumbs-up\"}`}></i>\r\n        </div>\r\n        <div\r\n          className={`love ${loved? \"active\": \"\"}`}\r\n          onClick={() => {\r\n            if(liked) {\r\n              setLiked(prev => !prev);\r\n            }\r\n            setLoved(prev => !prev);\r\n          }}\r\n        >\r\n          <i className={`${loved? \"fas fa-heart\" : \"far fa-heart\"}`}></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport \"./spinner.styles.css\";\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"spinner\">\r\n    </div>\r\n  )\r\n}\r\n","import { useCallback, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport useQuery from \"./useQuery.hook\";\nimport Post from \"./components/post.component\";\nimport Spinner from \"./components/spinner.component\";\n\nfunction App() {\n  const [pageNo, setPageNo] = useState(1);\n  const { loading, error, posts, limitReached } = useQuery(pageNo);\n\n  const observer = useRef();\n  const lastElementRef = useCallback(\n    (element) => {\n      if (loading) {\n        return;\n      }\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && !limitReached) {\n          setPageNo((prevPageNo) => prevPageNo + 1);\n        }\n      });\n      if (element) {\n        observer.current.observe(element);\n      }\n    },\n    [loading]\n  );\n\n  return (\n    <div className=\"App\">\n      {posts.map((post, index) => {\n        if (index + 1 === posts.length) {\n          return <Post post={post} ref={lastElementRef} key={post.id}/>\n        } else {\n          return <Post post={post} key={post.id}/>\n        }\n      })}\n      {loading && <Spinner/>}\n      {error && <span>\"Error occured...\"</span>}\n      {limitReached && <strong>\"You have reached the end!\"</strong>}\n    </div>\n  );\n}\n\nexport default App;\n","import React, {useEffect,useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nexport default function useQuery(pageNo) {\r\n  let [loading, setLoading] = useState(false);\r\n  let [limitReached, setLimitReached] = useState(false);\r\n  let [error, setError] = useState(false);\r\n  let [posts, setPosts] = useState([]);\r\n\r\n  useEffect(\r\n    () => {\r\n      setLoading(true);\r\n      axios({\r\n          method: 'GET',\r\n          url: 'https://jsonplaceholder.typicode.com/posts',\r\n          params: { _page: pageNo, _limit: \"10\"}\r\n        })\r\n        .then(result => {\r\n          console.log({result});\r\n          if(result.data.length <= 0) {\r\n            setLimitReached(true);\r\n          }\r\n          setPosts(prevData => [...prevData, ...result.data]);\r\n          setLoading(false);\r\n          setError(false);\r\n        })\r\n        .catch(error => {\r\n          setError(error);\r\n          console.log({error})\r\n        });\r\n    }, [pageNo]\r\n  );\r\n  return {loading, error, posts, limitReached};\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}